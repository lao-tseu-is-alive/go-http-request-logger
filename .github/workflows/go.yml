# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go-Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    permissions:
      contents: read # Grant read access to repository contents
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4 # Action to checkout your repository code
    - name: Set env
      run: | 
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "REVISION=$(git describe --dirty --always)" >> $GITHUB_ENV
        echo "NOW=$(date +%Y-%m-%dT%T)" >> $GITHUB_ENV
        echo "APP_REPOSITORY=github.com/${GITHUB_REPOSITORY}" >> $GITHUB_ENV

    - name: Compose LDFLAGS
      run: |
        LDFLAGS="-X ${APP_REPOSITORY}/pkg/version.BuildStamp=${NOW} -X ${APP_REPOSITORY}/pkg/version.REVISION=${REVISION}"
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
      env:
        APP_REPOSITORY: ${{ env.APP_REPOSITORY }}
        NOW: ${{ env.NOW }}
        REVISION: ${{ env.REVISION }}

    - name: Show LDFLAGS
      run: echo "$LDFLAGS"
      env:
        LDFLAGS: ${{ env.LDFLAGS }}

    - name: Preparing Test Env
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'
    - run: go version

    - name: Build
      run: go build -ldflags "$LDFLAGS" -v ./...

    - name: Test
      env:
        PORT: 8888
        LOG_FILE: DISCARD
      run: go test -race -coverprofile coverage.txt -coverpkg=./... ./cmd/goHttpRequestLoggerServer
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
